// Global state
let availableTimeSlots = [];

// Smooth scroll to booking section
function scrollToBooking() {
    document.getElementById('booking').scrollIntoView({ behavior: 'smooth' });
}

// Format date for API
function formatDate(date) {
    return moment(date).format('YYYY-MM-DD');
}

// Format time for display
function formatTime(time) {
    return moment(time, 'HH:mm').format('HH:mm');
}

// Check availability for selected date
async function checkAvailability(date) {
    try {
        const response = await fetch(`/api/appointments/availability?date=${date}`);
        if (!response.ok) throw new Error('Failed to fetch availability');
        const data = await response.json();
        return data.availableSlots;
    } catch (error) {
        console.error('Error checking availability:', error);
        return [];
    }
}

// Generate time slots
async function generateTimeSlots() {
    const timeSlots = document.getElementById('timeSlots');
    const selectedDate = document.getElementById('date').value;
    
    if (!selectedDate) return;
    
    // Show loading state
    timeSlots.innerHTML = '<div class="loading">Loading available times...</div>';
    
    try {
        // Get available slots from backend
        availableTimeSlots = await checkAvailability(selectedDate);
        
        timeSlots.innerHTML = '';
        
        if (availableTimeSlots.length === 0) {
            timeSlots.innerHTML = '<div class="no-slots">No available times for this date</div>';
            return;
        }
        
        availableTimeSlots.forEach(slot => {
            const timeSlot = document.createElement('div');
            timeSlot.className = 'time-slot';
            timeSlot.textContent = formatTime(slot);
            timeSlot.onclick = () => selectTimeSlot(timeSlot);
            timeSlots.appendChild(timeSlot);
        });
    } catch (error) {
        timeSlots.innerHTML = '<div class="error">Error loading time slots. Please try again.</div>';
        console.error('Error generating time slots:', error);
    }
}

// Handle time slot selection
function selectTimeSlot(slot) {
    document.querySelectorAll('.time-slot').forEach(s => s.classList.remove('selected'));
    slot.classList.add('selected');
}

// Initialize date picker
function initializeDatePicker() {
    const dateInput = document.getElementById('date');
    const today = new Date();
    const maxDate = new Date();
    maxDate.setMonth(maxDate.getMonth() + 2); // Allow booking up to 2 months in advance
    
    dateInput.min = today.toISOString().split('T')[0];
    dateInput.max = maxDate.toISOString().split('T')[0];
    
    dateInput.addEventListener('change', generateTimeSlots);
}

// Show loading state
function showLoading() {
    const submitBtn = document.querySelector('#bookingForm button[type="submit"]');
    submitBtn.disabled = true;
    submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Processing...';
}

// Reset loading state
function resetLoading() {
    const submitBtn = document.querySelector('#bookingForm button[type="submit"]');
    submitBtn.disabled = false;
    submitBtn.innerHTML = 'Confirm Booking';
}

// Handle form submission
document.getElementById('bookingForm').addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const selectedTimeSlot = document.querySelector('.time-slot.selected');
    if (!selectedTimeSlot) {
        alert('Please select a time slot');
        return;
    }
    
    showLoading();
    
    const bookingData = {
        service: document.getElementById('service').value,
        date: document.getElementById('date').value,
        time: selectedTimeSlot.textContent,
        name: document.getElementById('name').value,
        email: document.getElementById('email').value,
        phone: document.getElementById('phone').value
    };
    
    try {
        const response = await fetch('/api/bookings', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(bookingData)
        });
        
        const result = await response.json();
        
        if (response.ok) {
            // Show success message
            const successMessage = document.createElement('div');
            successMessage.className = 'success-message';
            successMessage.innerHTML = `
                <i class="fas fa-check-circle"></i>
                <h3>Booking Confirmed!</h3>
                <p>We've sent a confirmation email to ${bookingData.email}</p>
                <p>Appointment Details:</p>
                <ul>
                    <li>Service: ${bookingData.service}</li>
                    <li>Date: ${moment(bookingData.date).format('DD MMMM YYYY')}</li>
                    <li>Time: ${bookingData.time}</li>
                </ul>
            `;
            
            const bookingContainer = document.querySelector('.booking-container');
            bookingContainer.innerHTML = '';
            bookingContainer.appendChild(successMessage);
            
            // Scroll to success message
            successMessage.scrollIntoView({ behavior: 'smooth' });
        } else {
            throw new Error(result.message || 'Booking failed');
        }
    } catch (error) {
        console.error('Error submitting booking:', error);
        alert('There was an error processing your booking. Please try again later.');
    }
});

// Initialize the page
document.addEventListener('DOMContentLoaded', () => {
    initializeDatePicker();
    generateTimeSlots();
    
    // Initialize animations
    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.classList.add('animate');
            }
        });
    }, { threshold: 0.1 });
    
    document.querySelectorAll('.service-card').forEach(card => {
        observer.observe(card);
    });
});

document.addEventListener('DOMContentLoaded', function() {
    // Initialize mobile navigation
    initMobileNav();
    
    // Initialize booking system
    initBookingSystem();
    
    // Initialize scroll effects
    initScrollEffects();
    
    // Initialize date picker
    initializeDatePicker();
    generateTimeSlots();
    
    // Fix language selection button
    document.querySelectorAll('.lang-btn').forEach(button => {
        button.addEventListener('click', function() {
            document.querySelectorAll('.lang-btn').forEach(btn => btn.classList.remove('active'));
            this.classList.add('active');
            const lang = this.getAttribute('onclick').match(/\('([^']+)\)/)[1];
            changeLanguage(lang);
        });
    });
});

function initMobileNav() {
    const hamburger = document.querySelector('.hamburger');
    const navLinks = document.querySelector('.nav-links');
    const mobileMenuBtn = document.querySelector('.mobile-menu-btn');
    
    if (hamburger && navLinks) {
        hamburger.addEventListener('click', () => {
            hamburger.classList.toggle('active');
            navLinks.classList.toggle('active');
        });

        // Close menu when clicking outside
        document.addEventListener('click', (e) => {
            if (!hamburger.contains(e.target) && !navLinks.contains(e.target)) {
                hamburger.classList.remove('active');
                navLinks.classList.remove('active');
            }
        });

        // Close menu when clicking a link
        navLinks.querySelectorAll('a').forEach(link => {
            link.addEventListener('click', () => {
                hamburger.classList.remove('active');
                navLinks.classList.remove('active');
            });
        });
    }
    
    if (mobileMenuBtn) {
        mobileMenuBtn.addEventListener('click', () => {
            navLinks.classList.toggle('active');
            mobileMenuBtn.classList.toggle('active');
        });
    }
}

function initScrollEffects() {
    const navbar = document.querySelector('.navbar');
    let lastScrollTop = 0;

    window.addEventListener('scroll', () => {
        const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
        
        if (scrollTop > 50) {
            navbar.classList.add('scrolled');
        } else {
            navbar.classList.remove('scrolled');
        }

        lastScrollTop = scrollTop;
    });

    // Smooth scroll for anchor links
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function(e) {
            e.preventDefault();
            const target = document.querySelector(this.getAttribute('href'));
            if (target) {
                target.scrollIntoView({
                    behavior: 'smooth',
                    block: 'start'
                });
                // Close mobile menu if open
                const navLinks = document.querySelector('.nav-links');
                const mobileMenuBtn = document.querySelector('.mobile-menu-btn');
                navLinks.classList.remove('active');
                mobileMenuBtn.classList.remove('active');
            }
        });
    });
}

function initBookingSystem() {
    const calendar = document.getElementById('calendar');
    const timeSlots = document.getElementById('time-slots');
    const bookingForm = document.getElementById('booking-form');
    
    if (!calendar || !timeSlots || !bookingForm) return;

    // Initialize FullCalendar
    const calendarInstance = new FullCalendar.Calendar(calendar, {
        initialView: 'dayGridMonth',
        selectable: true,
        selectMirror: true,
        weekends: true,
        businessHours: {
            daysOfWeek: [0, 1, 2, 3, 4, 5, 6],
            startTime: '09:00',
            endTime: '18:00',
        },
        select: handleDateSelect,
        headerToolbar: {
            left: 'prev,next today',
            center: 'title',
            right: 'dayGridMonth'
        }
    });

    calendarInstance.render();

    // Handle form submission
    bookingForm.addEventListener('submit', handleBookingSubmission);
}

async function handleDateSelect(selectInfo) {
    const selectedDate = selectInfo.startStr;
    const timeSlots = document.getElementById('time-slots');
    
    // Clear previous time slots
    timeSlots.innerHTML = '';
    
    // Available time slots (9:00 - 18:00, 30min intervals)
    const slots = generateTimeSlots();
    
    // Get booked slots for the selected date
    const bookedSlots = await getBookedSlots(selectedDate);
    
    // Create time slot buttons
    slots.forEach(time => {
        const isAvailable = !bookedSlots.includes(time);
        const slot = document.createElement('button');
        slot.type = 'button';
        slot.className = `time-slot ${isAvailable ? '' : 'disabled'}`;
        slot.textContent = time;
        slot.disabled = !isAvailable;
        
        if (isAvailable) {
            slot.addEventListener('click', () => selectTimeSlot(slot, time));
        }
        
        timeSlots.appendChild(slot);
    });
}

function generateTimeSlots() {
    const slots = [];
    const start = 9; // 9:00
    const end = 18; // 18:00
    
    for (let hour = start; hour < end; hour++) {
        slots.push(`${hour.toString().padStart(2, '0')}:00`);
        slots.push(`${hour.toString().padStart(2, '0')}:30`);
    }
    
    return slots;
}

async function getBookedSlots(date) {
    // This would normally fetch from your backend
    // For now, return some random slots as booked
    return ['10:00', '14:30', '16:00'];
}

function selectTimeSlot(slot, time) {
    // Remove previous selection
    document.querySelectorAll('.time-slot').forEach(s => {
        s.classList.remove('selected');
    });
    
    // Add selection to clicked slot
    slot.classList.add('selected');
    
    // Store selected time
    const timeInput = document.createElement('input');
    timeInput.type = 'hidden';
    timeInput.name = 'selectedTime';
    timeInput.value = time;
    
    const existingTimeInput = document.querySelector('input[name="selectedTime"]');
    if (existingTimeInput) {
        existingTimeInput.remove();
    }
    
    document.getElementById('booking-form').appendChild(timeInput);
}

async function handleBookingSubmission(e) {
    e.preventDefault();
    
    const form = e.target;
    const selectedTime = form.querySelector('input[name="selectedTime"]')?.value;
    
    if (!selectedTime) {
        showNotification('Please select a time slot', 'error');
        return;
    }
    
    const formData = {
        service: form.service.value,
        time: selectedTime,
        name: form.name.value,
        email: form.email.value,
        phone: form.phone.value
    };
    
    try {
        // This would normally send to your backend
        // For now, just show success message
        console.log('Booking data:', formData);
        showNotification('Booking successful! We will contact you shortly.', 'success');
        form.reset();
        document.querySelectorAll('.time-slot').forEach(slot => {
            slot.classList.remove('selected');
        });
    } catch (error) {
        showNotification('Error making booking. Please try again.', 'error');
    }
}

function showNotification(message, type = 'info') {
    const notification = document.createElement('div');
    notification.className = `notification ${type}`;
    notification.textContent = message;
    
    document.body.appendChild(notification);
    
    // Show notification
    setTimeout(() => {
        notification.classList.add('show');
    }, 100);
    
    // Remove notification
    setTimeout(() => {
        notification.classList.remove('show');
        setTimeout(() => {
            notification.remove();
        }, 300);
    }, 3000);
}

function changeLanguage(lang) {
    // This function should be implemented to change the language
    console.log(`Language changed to ${lang}`);
}
